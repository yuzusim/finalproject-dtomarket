{{> layout/header}}

<div class="container sub-page">
    <form action="/order/save" method="post" class="needs-validation" novalidate="">

        <div class="order-container">
            <!--주문 테이블-->
            <div class="order-info">
                <h2 class="bold-500">주문 상품</h2>
                <h2></h2>
                <table class="table table-striped" style="vertical-align: middle;">
                    <tr style="font-weight: bold">
                        <td> NO.</td>
                        <td>상품명</td>
                        <td>가격</td>
                        <td>구매수량</td>
                        <td>합계</td>
                    </tr>
                    {{#cartList}}
                        <input type="hidden" name="cartId" value="{{id}}">
                        <input type="hidden" name="productId" value="{{productId}}">
                        <tr>
                            <td>{{indexNum}}</td>
                            <td>{{pName}}</td>
                            <input type="hidden" name="pName" value="{{pName}}">

                            <td class="price-class" data-price="{{price}}">{{price}}</td>
                            <input type="hidden" name="price" value="{{price}}">

                            <td>{{orderQty}}</td>
                            <input type="hidden" name="orderQty" value="{{orderQty}}">

                            <td class="price-class" data-price="{{sum}}">{{sum}}</td>
                        </tr>
                    {{/cartList}}
                </table>
            </div>
        </div>

        <br>

        <div class="info-container d-flex justify-content-center"> <!-- 주문자 정보와 결제 정보를 담을 컨테이너 추가 -->
            <!--주문자 정보-->
            <div class="user-info pr-80" style="width: 800px">
                <h2 class="bold-500">주문자 정보</h2>
                <table class="table table-striped">
                    <input type="hidden" name="userId" value="{{user.id}}">
                    <tr>
                        <th>배송지</th>
                        <td><input type="text" id="address" name="address" placeholder="배송지를 입력하세요" required> </td>
                        <input class="btn btn-mint" type="button" onClick="goPopup();" value="도로명주소 검색">
                    </tr>
                    <tr>
                        <th>받는 분</th>
                        <td>{{user.personName}}</td>
                    </tr>
                    <tr>
                        <th>연락처</th>
                        <td>{{user.phone}}</td>
                    </tr>
                    <tr>
                        <th>이메일</th>
                        <td>{{user.email}}</td>
                    </tr>

                </table>
            </div>

            <!--총 결제금액-->
            <div class="payment-info pl-80">
                <h3>결제 금액</h3>
                <div class="order-R">
                    <dl class="d-flex" style="margin:20px auto; width:300px; justify-content: space-between">
                        <dd style="font-size: 20px">최종 결제금액</dd>
                        <dt style="font-size: 20px" class="price-class" data-price="{{totalSum}}">{{totalSum}}원</dt>
                        <input type="hidden" name="totalSum" value="{{totalSum}}" readonly>
                    </dl>
                </div>
                <!--주문완료버튼-->
                <div class="mt-30">
                    <button class="btn btn-mint" type="submit" style="width:300px">주문완료하기</button>
                </div>
            </div>
            <!--총 결제금액-->

        </div>

    </form>
</div>



<script>

    function numberWithCommas(num) {
        return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }

    //처음에 들어갔을때 천단위 구분자 나오게
    $(".price-class").each(function () {
        let price = $(this).data("price");
        console.log(price);
        $(this).text(numberWithCommas(price));

    });

    //폼 제출할땐 text가 아니라 int 로 인식 되어야함
    $('form').submit(function(e){
        $(".price-class").each(function(){
            let price = $(this).val();
            // 쉼표 제거
            price = price.replace(/,/g, "");
            // 쉼표가 제거된 값을 필드에 다시 설정
            $(this).val(price);
        });
    });

    <!--    도로명주소 팝업창 -->
    function goPopup(){
        // 현재 화면의 중앙 위치를 계산
        let width = 500; // 팝업 창의 너비
        let height = 480; // 팝업 창의 높이
        let left = (window.screen.width / 2) - (width / 2);
        let top = (window.screen.height / 2) - (height / 2);
        new daum.Postcode({
            oncomplete: function(data) {
                // 주소 검색 결과 처리 로직
                document.getElementById('address').value = data.roadAddress; // 도로명 주소
                window.close();
            },
            width: width, // 팝업 창의 너비
            height: height // 팝업 창의 높이
        }).open({
            left: left, // 팝업 창을 화면의 가운데로 위치
            top: top
        });
    }
</script>
<script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
{{> layout/footer}}